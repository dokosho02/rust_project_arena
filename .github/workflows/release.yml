name: Release

on:
  push:
    tags:
      - "v*" # Push tags matching 'v*', e.g., v1.0.0

env:
  PROJECT_NAME: rust_project_arena # 定义项目名称变量

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build the project
        run: cargo build --release

      - name: Package the binary
        run: |
          mkdir -p release
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp target/release/${{ env.PROJECT_NAME }}.exe release/
          else
            cp target/release/${{ env.PROJECT_NAME }} release/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}-${{ runner.os }}
          path: release/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ env.PROJECT_NAME }}-${{ matrix.os }}/*
          asset_name: ${{ env.PROJECT_NAME }}-${{ matrix.os }}.zip
